name: 'Release'

on:
    push:
        branches:
            - main
            - master

jobs:
    release:
        name: Bake a Release
        runs-on: ubuntu-20.04

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports: ['5432:5432']
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
            redis:
                image: redis
                ports:
                    # Maps port 6379 on service container to the host
                    # Needed because `redis` host is not discoverable for some reason
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Checkout the repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Get package version
              id: version
              run: |
                  PACKAGE_VERSION=$(node -p "require('./package.json').version")
                  PACKAGE_VERSION_TAG="v$PACKAGE_VERSION"
                  if git rev-parse "$PACKAGE_VERSION_TAG"; then
                    IS_NEW_VERSION=false
                  else
                    IS_NEW_VERSION=true
                  fi
                  echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
                  echo "PACKAGE_VERSION_TAG=$PACKAGE_VERSION_TAG" >> $GITHUB_ENV
                  echo "IS_NEW_VERSION=$IS_NEW_VERSION" >> $GITHUB_ENV
                  echo "::set-output name=IS_NEW_VERSION::$IS_NEW_VERSION"

            - name: Set up Node 14
              if: steps.version.outputs.IS_NEW_VERSION == 'true'
              uses: actions/setup-node@v2
              with:
                  node-version: 14
                  registry-url: https://registry.npmjs.org

            - name: Install dependencies
              if: steps.version.outputs.IS_NEW_VERSION == 'true'
              run: yarn --frozen-lockfile

            - name: Initiate database for tests
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:init-test-db

            - name: Publish the package in the npm registry
              if: steps.version.outputs.IS_NEW_VERSION == 'true'
              run: npm publish --access public
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub release
              if: steps.version.outputs.IS_NEW_VERSION == 'true'
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.PACKAGE_VERSION_TAG }}
                  release_name: ${{ env.PACKAGE_VERSION }}
