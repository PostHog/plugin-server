name: CI

on:
    - pull_request

jobs:
    code-quality:
        name: Code quality and functionality checks
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports: ['5432:5432']
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
            redis:
                image: redis
                ports:
                    # Maps port 6379 on service container to the host
                    # Needed because `redis` host is not discoverable for some reason
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v1

            - name: Set up Node 14
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Install package.json dependencies with Yarn
              run: yarn

            - name: Check formatting with prettier
              run: yarn prettier:check

            - name: Lint with ESLint
              run: yarn lint

            - name: Test with Jest (config.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/config.test.ts

            - name: Test with Jest (plugins.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/plugins.test.ts

            - name: Test with Jest (queue.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/queue.test.ts

            - name: Test with Jest (schedule.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/schedule.test.ts

            - name: Test with Jest (server.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/server.test.ts

            - name: Test with Jest (sql.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/sql.test.ts

            - name: Test with Jest (utils.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/utils.test.ts

            - name: Test with Jest (vm.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/vm.test.ts

            - name: Test with Jest (worker.test.ts)
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn test tests/worker.test.ts

            - name: Run benchmarks
              env:
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
                  REDIS_URL: 'redis://localhost'
              run: yarn task:db-init && yarn benchmark --forceExit
