{
    "name": "@posthog/plugin-server",
    "version": "0.21.12",
    "description": "PostHog Plugin Server",
    "types": "dist/index.d.ts",
    "main": "dist/index.js",
    "scripts": {
        "test": "jest --runInBand --forceExit tests/**/*.test.ts",
        "test:postgres:1": "jest --runInBand --forceExit tests/*.test.ts",
        "test:postgres:2": "jest --runInBand --forceExit tests/postgres/*.test.ts",
        "test:clickhouse:1": "jest --runInBand --forceExit tests/clickhouse/postgres-parity.test.ts tests/clickhouse/e2e.test.ts tests/clickhouse/ingestion-utils.test.ts",
        "test:clickhouse:2": "jest --runInBand --forceExit tests/clickhouse/process-event.test.ts",
        "benchmark": "yarn run benchmarks:clickhouse && yarn run benchmark:postgres && yarn run benchmarks:vm",
        "benchmark:clickhouse": "node --expose-gc node_modules/.bin/jest --runInBand benchmarks/clickhouse/",
        "benchmark:postgres": "node --expose-gc node_modules/.bin/jest --runInBand benchmarks/postgres/",
        "benchmark:vm:memory": "node --expose-gc node_modules/.bin/jest --runInBand benchmarks/vm/memory.benchmark.ts",
        "benchmark:vm:worker": "node --expose-gc node_modules/.bin/jest --runInBand benchmarks/vm/worker.benchmark.ts",
        "start": "yarn start:dev",
        "start:dist": "node dist/index.js --base-dir ../posthog",
        "start:dev": "ts-node-dev --exit-child --debug src/index.ts --base-dir ../posthog",
        "start:dev:ee": "KAFKA_ENABLED=true KAFKA_HOSTS=localhost:9092 yarn start:dev",
        "build": "yarn clean && yarn compile",
        "clean": "rimraf dist/*",
        "compile:protobuf": "cd src/config/idl/ && rimraf protos.* && pbjs -t static-module -w commonjs -o protos.js *.proto && pbts -o protos.d.ts protos.js && eslint --fix . && prettier --write .",
        "compile:typescript": "tsc -b",
        "compile": "yarn compile:protobuf && yarn compile:typescript",
        "lint": "eslint .",
        "lint:fix": "eslint --fix .",
        "prettier": "prettier --write .",
        "prettier:check": "prettier --check .",
        "prepare": "yarn compile:protobuf",
        "prepublishOnly": "yarn build",
        "setup:dev:clickhouse": "cd ../posthog && export DEBUG=1 PRIMARY_DB=clickhouse && source env/bin/activate && python manage.py migrate_clickhouse",
        "setup:test:ee": "yarn setup:test:postgres && yarn setup:test:clickhouse",
        "setup:test:postgres": "cd ../posthog && (dropdb test_posthog || echo 'no db to drop') && createdb test_posthog && source env/bin/activate && DATABASE_URL=postgres://localhost:5432/test_posthog DEBUG=1 python manage.py migrate",
        "setup:test:clickhouse": "cd ../posthog && export TEST=1 PRIMARY_DB=clickhouse CLICKHOUSE_DATABASE=posthog_test && source env/bin/activate && python manage.py migrate_clickhouse",
        "services:start": "cd ../posthog && docker-compose -f ee/docker-compose.ch.yml up zookeeper kafka clickhouse",
        "services:stop": "cd ../posthog && docker-compose -f ee/docker-compose.ch.yml down",
        "services:clean": "cd ../posthog && docker-compose -f ee/docker-compose.ch.yml rm -v zookeeper kafka clickhouse",
        "services": "yarn services:stop && yarn services:clean && yarn services:start"
    },
    "bin": {
        "posthog-plugin-server": "bin/posthog-plugin-server"
    },
    "author": "PostHog <hey@posthog.com>",
    "repository": "https://github.com/PostHog/posthog-plugin-server",
    "license": "MIT",
    "dependencies": {
        "@babel/core": "^7.13.1",
        "@babel/preset-env": "^7.13.5",
        "@babel/preset-typescript": "^7.13.0",
        "@babel/standalone": "^7.13.7",
        "@google-cloud/bigquery": "^5.5.0",
        "@maxmind/geoip2-node": "^2.3.1",
        "@posthog/clickhouse": "^1.7.0",
        "@posthog/piscina": "^2.2.0-posthog",
        "@posthog/plugin-contrib": "^0.0.5",
        "@posthog/plugin-scaffold": "0.10.0",
        "@sentry/node": "^5.29.0",
        "@sentry/tracing": "^5.29.0",
        "@types/lru-cache": "^5.1.0",
        "adm-zip": "^0.4.16",
        "aws-sdk": "^2.884.0",
        "fast-deep-equal": "^3.1.3",
        "generic-pool": "^3.7.1",
        "graphile-worker": "^0.11.1",
        "hot-shots": "^8.2.1",
        "ioredis": "^4.19.2",
        "kafkajs": "^1.15.0",
        "lru-cache": "^6.0.0",
        "luxon": "^1.25.0",
        "node-fetch": "^2.6.1",
        "node-schedule": "^1.3.2",
        "pg": "^8.4.2",
        "posthog-js-lite": "^0.0.5",
        "pretty-bytes": "^5.6.0",
        "protobufjs": "^6.10.2",
        "redlock": "^4.2.0",
        "snowflake-sdk": "^1.6.0",
        "tar-stream": "^2.1.4",
        "uuid": "^8.3.1",
        "vm2": "^3.9.2"
    },
    "devDependencies": {
        "@babel/cli": "^7.13.0",
        "@types/adm-zip": "^0.4.33",
        "@types/babel__standalone": "^7.1.3",
        "@types/generic-pool": "^3.1.9",
        "@types/ioredis": "^4.17.7",
        "@types/jest": "^26.0.15",
        "@types/luxon": "^1.25.0",
        "@types/node": "^14.14.6",
        "@types/node-fetch": "^2.5.7",
        "@types/node-schedule": "^1.3.1",
        "@types/pg": "^7.14.6",
        "@types/redlock": "^4.0.1",
        "@types/snowflake-sdk": "^1.5.1",
        "@types/supertest": "^2.0.10",
        "@types/tar-stream": "^2.1.0",
        "@types/uuid": "^8.3.0",
        "@typescript-eslint/eslint-plugin": "^4.14.0",
        "@typescript-eslint/parser": "^4.14.0",
        "babel-eslint": "^10.1.0",
        "eslint": "^7.18.0",
        "eslint-config-prettier": "^7.2.0",
        "eslint-plugin-import": "^2.20.2",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-promise": "^4.1.1",
        "eslint-plugin-react": "^7.20.0",
        "eslint-plugin-simple-import-sort": "^7.0.0",
        "husky": ">=4",
        "jest": "^26.6.3",
        "lint-staged": ">=10.5.1",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "supertest": "^6.0.1",
        "ts-jest": "^26.4.4",
        "ts-node": "^9.0.0",
        "ts-node-dev": "^1.0.0",
        "typescript": "^4.0.5"
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    },
    "lint-staged": {
        "*.{js,ts}": "eslint --fix",
        "*.{js,ts,css,scss,json,yml,yaml,md}": "prettier --write"
    }
}
